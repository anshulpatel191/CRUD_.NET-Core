import React, { useEffect, useState } from 'react';
import { useContext } from "react";
import axios from 'axios';
import { Table, Button } from 'react-bootstrap';
import { AppContext } from "../Context/App.context";
import { useNavigate } from 'react-router-dom';
import SearchBar from './SearchBar';

const CustomerTable = () => {
  const [customers, setCustomers] = useState([]);
  const [filteredData, setFilteredData] = useState([]);
  const filterData = (searchTerm) => {
    const filtered = customers.filter((item) => item.customerName.toLowerCase().includes(searchTerm.toLowerCase()));

    setFilteredData(filtered);
  }
  const { user, handleUserInfo, setCustomerData } = useContext(AppContext);
  const navigate = useNavigate();

  useEffect(() => {
    const headers= {"Authorization" : `Bearer ${user.token}`}
    axios.get('Customers',{headers})
      .then((response) => {
        setCustomers(response.data); 
      })
      .catch((error) => {
        console.error('Error fetching customer data:', error);
      });
  }, []);

  const handleViewClick = (customer) => {
    console.log(customer);
    setCustomerData(customer);
        navigate(
          '/EditCustomer'
        )
  };
  
  return (
    <div><SearchBar filterData={filterData} />
    <Table striped bordered hover>
      <thead>
        <tr>
          <th>Customer ID</th>
          <th>Customer Name</th>
          <th>View</th>
        </tr>
      </thead>
      <tbody>
        {filteredData.length == 0 ? customers.map((customer) => (
          <tr key={customer.id}>
            <td>{customer.customerId}</td>
            <td>{customer.customerName}</td>
            <td>
              <Button variant="primary" onClick={() => handleViewClick(customer)}>View</Button>
            </td>
          </tr>
        )) : filteredData.map((customer) => (
          <tr key={customer.id}>
            <td>{customer.customerId}</td>
            <td>{customer.customerName}</td>
            <td>
              <Button variant="primary" onClick={() => handleViewClick(customer)}>Edit</Button>
            </td>
          </tr>
        ))}
      </tbody>
    </Table>
    </div>
  );

};

export default CustomerTable;



import React, { useEffect, useState } from 'react';
import { useContext } from 'react';
import axios from 'axios';
import { Table, Button } from 'react-bootstrap';
import { AppContext } from '../Context/App.context';
import { useNavigate } from 'react-router-dom';
import SearchBar from './SearchBar';

const CustomerTable = () => {
  const [customers, setCustomers] = useState([]);
  const [filteredData, setFilteredData] = useState([]);
  const filterData = (searchTerm) => {
    const filtered = customers.filter((item) =>
      item.customerName.toLowerCase().includes(searchTerm.toLowerCase())
    );

    setFilteredData(filtered);
  };
  const { user, handleUserInfo, setCustomerData } = useContext(AppContext);
  const navigate = useNavigate();

  useEffect(() => {
    const headers = { Authorization: `Bearer ${user.token}` };
    axios
      .get('Customers', { headers })
      .then((response) => {
        setCustomers(response.data);
      })
      .catch((error) => {
        console.error('Error fetching customer data:', error);
      });
  }, []);

  const handleViewClick = (customer) => {
    console.log(customer);
    setCustomerData(customer);
    navigate('/EditCustomer');
  };

  const handleDeleteClick = (customerId, customerName) => {
    // Implement your delete logic here
    // You can use axios or any other method to send a DELETE request to your API
    // and pass the customerId as a parameter
    console.log(`Deleting customer ${customerName} with ID ${customerId}`);
  };

  return (
    <div>
      <SearchBar filterData={filterData} />
      <Table striped bordered hover>
        <thead>
          <tr>
            <th>Customer ID</th>
            <th>Customer Name</th>
            <th>View</th>
            <th>Delete</th> {/* Add a new column for delete button */}
          </tr>
        </thead>
        <tbody>
          {filteredData.length === 0
            ? customers.map((customer) => (
                <tr key={customer.id}>
                  <td>{customer.customerId}</td>
                  <td>{customer.customerName}</td>
                  <td>
                    <Button
                      variant="primary"
                      onClick={() => handleViewClick(customer)}
                    >
                      View
                    </Button>
                  </td>
                  <td>
                    <Button
                      variant="danger" // You can use a different variant for delete button
                      onClick={() =>
                        handleDeleteClick(customer.customerId, customer.customerName)
                      }
                    >
                      Delete
                    </Button>
                  </td>
                </tr>
              ))
            : filteredData.map((customer) => (
                <tr key={customer.id}>
                  <td>{customer.customerId}</td>
                  <td>{customer.customerName}</td>
                  <td>
                    <Button
                      variant="primary"
                      onClick={() => handleViewClick(customer)}
                    >
                      Edit
                    </Button>
                  </td>
                  <td>
                    <Button
                      variant="danger" // You can use a different variant for delete button
                      onClick={() =>
                        handleDeleteClick(customer.customerId, customer.customerName)
                      }
                    >
                      Delete
                    </Button>
                  </td>
                </tr>
              ))}
        </tbody>
      </Table>
    </div>
  );
};

export default CustomerTable;




import axios from 'axios';

// ...

const handleDeleteClick = (customerId, customerName) => {
  const requestData = {
    customerId: customerId,
    customerName: customerName,
  };

  // Send a DELETE request to your API with the request data in the body
  axios
    .delete('Your_API_URL', { data: requestData })
    .then((response) => {
      // Handle a successful delete response, you can show a confirmation message or update the customer list.
      console.log(`Customer ${customerName} with ID ${customerId} deleted successfully.`);
      
      // You can also refresh the customer list or update the state to remove the deleted customer.
    })
    .catch((error) => {
      // Handle errors, such as displaying an error message.
      console.error(`Error deleting customer ${customerName} with ID ${customerId}:`, error);
    });
};

// ...


