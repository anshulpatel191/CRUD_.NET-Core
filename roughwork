import React, { useContext } from 'react';
import Navbar from 'react-bootstrap/Navbar';
import Nav from 'react-bootstrap/Nav';
import Button from 'react-bootstrap/Button';
import { AppContext } from "../Context/App.context";
import { useNavigate, useLocation } from "react-router-dom";

const NavbarComponent = ({ navigate }) => {
    const { user, handleUserInfo } = useContext(AppContext);
    const location = useLocation(); // Get the current location
    const handleRegister = () => {
        navigate('/login');
    }

    // Check if the current location is "/customer" (Accounts Details page)
    const isCustomerPage = location.pathname === '/customer';

    // Check if the current location is "/transfer" (Transaction page)
    const isTransferPage = location.pathname === '/transfer';

    return (
        <Navbar bg="dark" variant="dark" expand="lg" >
            <Navbar.Brand style={{ padding: "10px" }}> ALEHA </Navbar.Brand>
            <Navbar.Toggle aria-controls="basic-navbar-nav" />
            <Navbar.Collapse id="basic-navbar-nav" style={{ justifyItems: "space-between" }} >
                <Nav className="ml-auto" style={{ display: "flex", flexGrow: 1, justifyContent: "space-between" }} >
                    <Nav.Item>
                        <Nav.Link>{user ? `Welcome, ${user.userName}` : ""} </Nav.Link>
                    </Nav.Item>
                    {isCustomerPage && user && (
                        <Nav.Item style={{ paddingRight: "10px" }}>
                            <Button variant="danger" onClick={() => handleUserInfo(null)}>Logout</Button>
                        </Nav.Item>
                    )}
                    {isTransferPage && (
                        <Nav.Item>
                            <Button variant="primary" onClick={() => navigate('/customer')}>Go to Customer Page</Button>
                        </Nav.Item>
                    )}
                </Nav>
            </Navbar.Collapse>
        </Navbar>
    );
}

export default NavbarComponent;



import React from 'react';
import { BrowserRouter, Route, Routes, useNavigate } from 'react-router-dom';
import { AppProvider } from './Context/App.context';
import NavbarComponent from './Components/NavBar';
import LoginWithToken from './Pages/LoginWithToken';
import ProfilePage from './Pages/ProfilePage';
import RegisterPage from './Pages/RegisterPage';
import CustomerPage from './Pages/CustomerPage';
import TransferPage from './Pages/TransferPage';
import Success from './Pages/Success';
import StatementPage from './Pages/StatementPage';
import ProtectedRoute from './Components/ProtectedRoute';
import CustomerDashboard from './Pages/CustomerDashboard';
import AdminDashboard from './Pages/AdminDashboard';
import AccountDashboard from './Pages/AccountDashboard';
import AccountRegistration from './Pages/AccountRegistration';

const App = () => {
  return (
    <BrowserRouter>
      <AppProvider>
        <NavbarWithNavigate />
        <Routes>
          <Route path="/" element={<LoginWithToken />} />
          <Route path="/login" element={<LoginWithToken />} />
          <Route path="/register" element={<RegisterPage />} />
          <Route
            path="/profile"
            element={
              <ProtectedRoute>
                <ProfilePage />
              </ProtectedRoute>
            }
          />
          <Route
            path="/customer"
            element={
              <ProtectedRoute>
                <CustomerPage />
                {/*<CustomerDashboard />*/}
              </ProtectedRoute>
            }
          />
          <Route
            path="/transfer"
            element={
              <ProtectedRoute>
                <TransferPage />
              </ProtectedRoute>
            }
          />
          <Route
            path="/success/:message/:name"
            element={
              // <ProtectedRoute>
                <Success />
              // </ProtectedRoute>
            }
          />
          <Route
            path="/account-dashboard"
            element={
              //<ProtectedRoute>
                <AccountDashboard />
              //</ProtectedRoute>
            }
          />
          <Route path="/account-registration" element={ <AccountRegistration /> } />
          <Route path="/statement" element={<StatementPage />} />
          <Route path="/customer-dashboard" element={<CustomerDashboard />} />
          <Route path="/admin-dashboard" element={<AdminDashboard />} />
        </Routes>
      </AppProvider>
    </BrowserRouter>
  );
};

export default App;

const NavbarWithNavigate = () => {
  const navigate = useNavigate();

  return <NavbarComponent navigate={navigate} />;
};

