import React, {useContext,useState} from "react";
import axios from "axios";
import { AppContext } from '../Context/App.context';
import { useNavigate } from "react-router-dom";
import 'bootstrap/dist/css/bootstrap.min.css';
import 'bootstrap/dist/js/bootstrap.min.js';
import { toast, ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";


const PinChange = () => {
    const [pinObj, setpinObj] = useState({
        oldpin: '',
        newpin: '',
        confirmpin: '',
      });
    
    const handleInputChange = (event) => {
        const { name, value } = event.target;
        setpinObj({
          ...pinObj,
          [name]: value,
        });
      };
    
     
    const handleSubmit = (event) => {
        event.preventDefault();
    
        
        const { oldpin, newpin, confirmpin } = pinObj;
    
        
        if (newpin !== confirmpin) {
          alert('New PIN and Confirm PIN do not match.');
        } else {
          console.log('Form submitted with values:', pinObj);
        }
      };
    
      return (
        <form onSubmit={handleSubmit}>
          <div>
            <label htmlFor="oldpin">Old PIN</label>
            <input
              type="password"
              id="oldpin"
              name="oldpin"
              value={pinObj.oldpin}
              onChange={handleInputChange}
            />
          </div>
          <div>
            <label htmlFor="newpin">New PIN</label>
            <input
              type="password"
              id="newpin"
              name="newpin"
              value={pinObj.newpin}
              onChange={handleInputChange}
            />
          </div>
          <div>
            <label htmlFor="confirmpin">Confirm PIN</label>
            <input
              type="password"
              id="confirmpin"
              name="confirmpin"
              value={pinObj.confirmpin}
              onChange={handleInputChange}
            />
          </div>
          <button type="submit">Submit</button>
        </form>
      );
}




export default PinChange;
